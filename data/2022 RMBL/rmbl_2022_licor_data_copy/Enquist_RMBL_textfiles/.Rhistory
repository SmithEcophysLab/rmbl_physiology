ggplot(jlb.stats, aes(x = reorder(year, +win.percent), y = win.percent), colour = coach) +
geom_col(aes(fill = coach), show.legend = FALSE) +
labs(x = "Year", y = "Win % per season") +
theme_classic(base_size = 16)
ggplot(jlb.stats, aes(x = reorder(year, +win.percent), y = win.percent), colour = coach) +
geom_col(show.legend = FALSE) +
labs(x = "Year", y = "Win % per season") +
theme_classic(base_size = 16)
ggplot(jlb.stats, aes(x = reorder(year, +win.percent), y = win.percent), group = coach) +
geom_col(show.legend = FALSE) +
labs(x = "Year", y = "Win % per season") +
theme_classic(base_size = 16)
ggplot(jlb.stats, aes(x = reorder(year, +win.percent), y = win.percent), fill = coach) +
geom_col() +
labs(x = "Year", y = "Win % per season") +
theme_classic(base_size = 16)
View(rmbl.enq.aci.clean.parameters)
library(tibble)
install.packages("tidyverse")
library(tidyverse)
rmbl.test.data <- rmbl.enq.aci.clean.parameters %>%
mutate(Jmax:Vcmax = Jmax/Vcmax)
rmbl.test.data <- rmbl.enq.aci.clean.parameters %>%
mutate(JVratio = Jmax/Vcmax)
View(rmbl.test.data)
ggplot(rmbl.test.data, aes(elevation, JVratio)) +
geom_point(position = position_jitter(width = 10), alpha = .3) +
stat_summary(fun = mean, na.rm = TRUE,
geom = "point", color = "firebrick1", size = 3) +
stat_summary(fun.data = mean_cl_normal, na.rm =TRUE,
geom = "errorbar", width = .2, color = "firebrick1") +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.test.data, aes(elevation, JVratio)) +
geom_point(position = position_jitter(width = 10), alpha = .3) +
stat_summary(fun = mean, na.rm = TRUE,
geom = "point", color = "firebrick1", size = 3) +
stat_summary(fun.data = mean_cl_normal, na.rm =TRUE,
geom = "errorbar", width = .2, color = "firebrick1") +
labs(x = "Elevation (m)", y = Jmax:Vcmax ratio) +
ggplot(rmbl.test.data, aes(elevation, JVratio)) +
geom_point(position = position_jitter(width = 10), alpha = .3) +
stat_summary(fun = mean, na.rm = TRUE,
geom = "point", color = "firebrick1", size = 3) +
stat_summary(fun.data = mean_cl_normal, na.rm =TRUE,
geom = "errorbar", width = .2, color = "firebrick1") +
labs(x = "Elevation (m)", y = "Jmax:Vcmax ratio") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# set working directory and load data
setwd("~/Documents/rmbl_physiology/data/rmbl_2022_licor_data_copy/Enquist_RMBL_textfiles")
rmbl.enq.clean.2 <- read.csv("rmbl_licor_enquistsites_alldata_cleaned_NoOutliers.csv")
str(rmbl.enq.clean.2)
# fit ACi curves
rmbl.enq.clean.2.fits <- fitacis(rmbl.enq.clean.2, "id", fitmethod="bilinear", fitTPU = FALSE, id = c("rep", "elevation", "species"))
# fit ACi curves (species pooled)
rmbl.enq.clean.2.pooled.species <- fitacis(rmbl.enq.clean.2, "id", fitmethod="bilinear", fitTPU = FALSE, id = c("rep", "elevation"))
# plot vcmax vs jmax
with(coef(rmbl.enq.clean.2.pooled.species), plot(Vcmax, Jmax))
rmbl.enq.clean.2.parameters <- coef(rmbl.enq.clean.2.fits)
rmbl.enq.clean.2.parameters$elevation <- as.numeric(rmbl.enq.clean.2.parameters$elevation)
# Plot with species noted
ggplot(rmbl.enq.clean.2.parameters, aes(elevation, Vcmax, colour = species)) +
stat_summary(fun = "mean", geom = "pointrange",
fun.max = function(x) mean(x) + sd(x) / sqrt(length(x)),
fun.min = function(x) mean(x) - sd(x) / sqrt(length(x))) +
geom_line() +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
View(rmbl.enq.clean.2.parameters)
rmbl.enq.clean.2 <- read.csv("rmbl_licor_enquistsites_alldata_cleaned_NoOutliers.csv")
# fit ACi curves
rmbl.enq.clean.2.fits <- fitacis(rmbl.enq.clean.2, "id", fitmethod="bilinear", fitTPU = FALSE, id = c("rep", "elevation", "species"))
# fit ACi curves (species pooled)
rmbl.enq.clean.2.pooled.species <- fitacis(rmbl.enq.clean.2, "id", fitmethod="bilinear", fitTPU = FALSE, id = c("rep", "elevation"))
# plot vcmax vs jmax
with(coef(rmbl.enq.clean.2.pooled.species), plot(Vcmax, Jmax))
rmbl.enq.clean.2.parameters <- coef(rmbl.enq.clean.2.fits)
rmbl.enq.clean.2.parameters$elevation <- as.numeric(rmbl.enq.clean.2.parameters$elevation)
# Plot with species noted
ggplot(rmbl.enq.clean.2.parameters, aes(elevation, Vcmax, colour = species)) +
stat_summary(fun = "mean", geom = "pointrange",
fun.max = function(x) mean(x) + sd(x) / sqrt(length(x)),
fun.min = function(x) mean(x) - sd(x) / sqrt(length(x))) +
geom_line() +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
rmbl.enq.clean.2.pooled.species.parameters <- coef(rmbl.enq.clean.2.pooled.species)
rmbl.enq.clean.2.pooled.species.parameters$elevation <- as.numeric(rmbl.enq.clean.2.pooled.species.parameters$elevation)
# Plot with species pooled
ggplot(rmbl.enq.clean.2.pooled.species.parameters, aes(elevation, Vcmax)) +
geom_point(position = position_jitter(width = 10), alpha = .3) +
stat_summary(fun = mean, na.rm = TRUE,
geom = "point", color = "firebrick1", size = 3) +
stat_summary(fun.data = mean_cl_normal, na.rm =TRUE,
geom = "errorbar", width = .2, color = "firebrick1") +
labs(x = "Elevation (m)", y = "Jmax:Vcmax ratio") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Plot with species pooled
ggplot(rmbl.enq.clean.2.pooled.species.parameters, aes(elevation, Vcmax)) +
geom_point(position = position_jitter(width = 10), alpha = .3) +
stat_summary(fun = mean, na.rm = TRUE,
geom = "point", color = "firebrick1", size = 3) +
stat_summary(fun.data = mean_cl_normal, na.rm =TRUE,
geom = "errorbar", width = .2, color = "firebrick1") +
labs(x = "Elevation (m)", y = "Vcmax") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Add column with Jmax:Vcmax ratio
rmbl.enq.clean.2.pooled.species.parameters <- rmbl.enq.clean.2.pooled.species.parameters %>%
mutate(JVratio = Jmax/Vcmax)
# Plot with species pooled
ggplot(rmbl.enq.clean.2.pooled.species.parameters, aes(elevation, JVratio)) +
geom_point(position = position_jitter(width = 10), alpha = .3) +
stat_summary(fun = mean, na.rm = TRUE,
geom = "point", color = "firebrick1", size = 3) +
stat_summary(fun.data = mean_cl_normal, na.rm =TRUE,
geom = "errorbar", width = .2, color = "firebrick1") +
labs(x = "Elevation (m)", y = "Jmax:Vcmax ratio") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Plot with species pooled
ggplot(rmbl.enq.clean.2.pooled.species.parameters, aes(elevation, Jmax)) +
geom_point(position = position_jitter(width = 10), alpha = .3) +
stat_summary(fun = mean, na.rm = TRUE,
geom = "point", color = "firebrick1", size = 3) +
stat_summary(fun.data = mean_cl_normal, na.rm =TRUE,
geom = "errorbar", width = .2, color = "firebrick1") +
labs(x = "Elevation (m)", y = "Jmax") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
rmbl.enq.clean <- rmbl.enq.clean.2.parameters %>%
mutate(JVratio = Jmax/Vcmax)
# Plot with species noted
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
stat_summary(fun = "mean", geom = "pointrange",
fun.max = function(x) mean(x) + sd(x) / sqrt(length(x)),
fun.min = function(x) mean(x) - sd(x) / sqrt(length(x))) +
geom_line() +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 10)) +
geom_line() +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 10)) +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 20)) +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 20)) +
stat_summary(fun = "mean", geom = "point", size = 5) +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 20), alpha = .5) +
stat_summary(fun = "mean", geom = "point", size = 5) +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 20), alpha = .5) +
stat_summary(fun = "mean", geom = "point", size = 5, position = position_jitter(width = 20)) +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 20), alpha = .5) +
stat_summary(fun = "mean", geom = "point", size = 5, position = position_jitter(width = 30)) +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 20), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_jitter(width = 30)) +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 20), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_jitter(width = 30)) +
geom_line() +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 20), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_jitter(width = 30)) +
stat_summary(fun = mean, aes(group = 1),
geom = "line", size = .75, shape = "diamond")
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 20), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_jitter(width = 30)) +
stat_summary(fun = mean, aes(group = 23),
geom = "line", size = .75, shape = "diamond")
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 20), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_jitter(width = 30)) +
stat_summary(fun = mean, geom = "line")
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 20), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_jitter(width = 30)) +
stat_summary(fun = "mean", geom = "line",
position = position_jitter(width = 30)) +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 20), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_dodge(width = 30)) +
stat_summary(fun = "mean", geom = "line",
position = position_dodge(width = 30)) +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 10), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_dodge(width = 30)) +
stat_summary(fun = "mean", geom = "line",
position = position_dodge(width = 30)) +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, Jmax, colour = species)) +
geom_point(position = position_jitter(width = 10), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_dodge(width = 30)) +
stat_summary(fun = "mean", geom = "line",
position = position_dodge(width = 30)) +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, JVratio, colour = species)) +
geom_point(position = position_jitter(width = 10), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_dodge(width = 30)) +
stat_summary(fun = "mean", geom = "line",
position = position_dodge(width = 30)) +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, JVratio, colour = species)) +
geom_point(position = position_jitter(width = 10), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_dodge(width = 30)) +
stat_summary(fun = "mean", geom = "line",
position = position_dodge(width = 30)) +
labs(x = "Elevation (m)", y = "Jmax:Vcmax ratio") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(rmbl.enq.clean, aes(elevation, JVratio, colour = species)) +
geom_point(position = position_jitter(width = 10), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_dodge(width = 30)) +
stat_summary(fun = "mean", geom = "line",
position = position_dodge(width = 30)) +
labs(x = "Elevation (m)", y = "Jmax:Vcmax ratio") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
# Plot with species noted by colour
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
stat_summary(fun = "mean", geom = "pointrange",
fun.max = function(x) mean(x) + sd(x) / sqrt(length(x)),
fun.min = function(x) mean(x) - sd(x) / sqrt(length(x))) +
geom_line() +
labs(x = "Elevation (m)") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
# Plot with species pooled
ggplot(rmbl.enq.clean.2.pooled.species.parameters, aes(elevation, Jmax)) +
geom_point(position = position_jitter(width = 10), alpha = .3) +
stat_summary(fun = mean, na.rm = TRUE,
geom = "point", color = "firebrick1", size = 3) +
stat_summary(fun.data = mean_cl_normal, na.rm =TRUE,
geom = "errorbar", width = .2, color = "firebrick1") +
labs(x = "Elevation (m)", y = "Jmax") +
theme_classic(base_size = 18) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
# Plot with species noted by colour
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
stat_summary(fun = "mean", geom = "pointrange",
fun.max = function(x) mean(x) + sd(x) / sqrt(length(x)),
fun.min = function(x) mean(x) - sd(x) / sqrt(length(x))) +
geom_line() +
labs(x = "Elevation (m)") +
theme_classic(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
ggplot(rmbl.enq.clean, aes(elevation, JVratio, colour = species)) +
geom_point(position = position_jitter(width = 10), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_dodge(width = 30)) +
stat_summary(fun = "mean", geom = "line",
position = position_dodge(width = 30)) +
labs(x = "Elevation (m)", y = "Jmax:Vcmax ratio") +
theme_classic(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
# Plot with species noted by colour
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 10), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_dodge(width = 30)) +
stat_summary(fun = "mean", geom = "line",
position = position_dodge(width = 30)) +
labs(x = "Elevation (m)", y = "Jmax:Vcmax ratio") +
theme_classic(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
# Plot with species noted by colour
ggplot(rmbl.enq.clean, aes(elevation, Vcmax, colour = species)) +
geom_point(position = position_jitter(width = 10), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_dodge(width = 30)) +
stat_summary(fun = "mean", geom = "line",
position = position_dodge(width = 30)) +
labs(x = "Elevation (m)", y = "Vcmax") +
theme_classic(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
# Plot with species noted by colour
ggplot(rmbl.enq.clean, aes(elevation, Jmax, colour = species)) +
geom_point(position = position_jitter(width = 10), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_dodge(width = 30)) +
stat_summary(fun = "mean", geom = "line",
position = position_dodge(width = 30)) +
labs(x = "Elevation (m)", y = "Jmax") +
theme_classic(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
# Plot with species pooled
ggplot(rmbl.enq.clean.2.pooled.species.parameters, aes(elevation, Jmax)) +
geom_point(position = position_jitter(width = 10), alpha = .3) +
stat_summary(fun = mean, na.rm = TRUE,
geom = "point", color = "firebrick1", size = 3) +
stat_summary(fun.data = mean_cl_normal, na.rm =TRUE,
geom = "errorbar", width = .2, color = "firebrick1") +
labs(x = "Elevation (m)", y = "Jmax") +
theme_classic(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
# Plot with species pooled
ggplot(rmbl.enq.clean.2.pooled.species.parameters, aes(elevation, Vcmax)) +
geom_point(position = position_jitter(width = 10), alpha = .3) +
stat_summary(fun = mean, na.rm = TRUE,
geom = "point", color = "firebrick1", size = 3) +
stat_summary(fun.data = mean_cl_normal, na.rm =TRUE,
geom = "errorbar", width = .2, color = "firebrick1") +
labs(x = "Elevation (m)", y = "Vcmax") +
theme_classic(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
# Plot with species pooled
ggplot(rmbl.enq.clean.2.pooled.species.parameters, aes(elevation, JVratio)) +
geom_point(position = position_jitter(width = 10), alpha = .3) +
stat_summary(fun = mean, na.rm = TRUE,
geom = "point", color = "firebrick1", size = 3) +
stat_summary(fun.data = mean_cl_normal, na.rm =TRUE,
geom = "errorbar", width = .2, color = "firebrick1") +
labs(x = "Elevation (m)", y = "Jmax:Vcmax") +
theme_classic(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
# Plot with species noted by colour
ggplot(rmbl.enq.clean, aes(elevation, Jmax, colour = species)) +
geom_point(position = position_jitter(width = 10), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_dodge(width = 30)) +
stat_summary(fun = "mean", geom = "line",
position = position_dodge(width = 30)) +
labs(x = "Elevation (m)", y = "Jmax") +
theme_classic(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
citation("plantecophys")
imagej_path <- "/Applications/ImageJ.app"
leafimage_path <- "~/Documents/rmbl_physiology/data/rmbl_2022_leafscans/Aimee_sites_cropped"
leaf_area_aimee <- run.ij(path.imagej = imagej_path, set.directory = leafimage_path,
distance.pixel = 1180, known.distance = 10, set.memory = 10)
write.csv(leaf_area_aimee, file = "~/Documents/rmbl_physiology/data/rmbl_2022_leafscans/leaf_areas_aimee.csv")
leafimage_path <- "~/Documents/rmbl_physiology/data/rmbl_2022_leafscans/Aimee_sites_cropped"
leaf_area_aimee <- run.ij(path.imagej = imagej_path, set.directory = leafimage_path,
distance.pixel = 1180, known.distance = 10, set.memory = 10)
write.csv(leaf_area_aimee, file = "~/Documents/rmbl_physiology/data/rmbl_2022_leafscans/leaf_areas_aimee.csv")
rmbl.enq.clean.2 <- read.csv("rmbl_licor_enquistsites_alldata_cleaned_NoOutliers.csv")
# fit ACi curves
rmbl.enq.clean.2.fits <- fitacis(rmbl.enq.clean.2, "id", fitmethod="bilinear", fitTPU = FALSE, id = c("rep", "elevation", "species"))
# fit ACi curves (species pooled)
rmbl.enq.clean.2.pooled.species <- fitacis(rmbl.enq.clean.2, "id", fitmethod="bilinear", fitTPU = FALSE, id = c("rep", "elevation"))
# plot vcmax vs jmax
with(coef(rmbl.enq.clean.2.pooled.species), plot(Vcmax, Jmax))
rmbl.enq.clean.2.pooled.species.parameters <- coef(rmbl.enq.clean.2.pooled.species)
rmbl.enq.clean.2.parameters <- coef(rmbl.enq.clean.2.fits)
rmbl.enq.clean.2.parameters$elevation <- as.numeric(rmbl.enq.clean.2.parameters$elevation)
# Plot with species noted by colour
ggplot(rmbl.enq.clean, aes(elevation, Jmax, colour = species)) +
geom_point(position = position_jitter(width = 10), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_dodge(width = 30)) +
stat_summary(fun = "mean", geom = "line",
position = position_dodge(width = 30)) +
labs(x = "Elevation (m)", y = "Jmax") +
theme_classic(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
# Add column with Jmax:Vcmax ratio
rmbl.enq.clean.2.pooled.species.parameters <- rmbl.enq.clean.2.pooled.species.parameters %>%
mutate(JVratio = Jmax/Vcmax)
rmbl.enq.clean <- rmbl.enq.clean.2.parameters %>%
mutate(JVratio = Jmax/Vcmax)
# Plot with species noted by colour
ggplot(rmbl.enq.clean, aes(elevation, Jmax, colour = species)) +
geom_point(position = position_jitter(width = 10), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_dodge(width = 30)) +
stat_summary(fun = "mean", geom = "line",
position = position_dodge(width = 30)) +
labs(x = "Elevation (m)", y = "Jmax") +
theme_classic(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
rmbl.enq.clean.2 <- read.csv("rmbl_licor_enquistsites_alldata_cleaned_NoOutliers.csv")
# fit ACi curves (species pooled)
rmbl.enq.clean.2.pooled.species <- fitacis(rmbl.enq.clean.2, "id", fitmethod="bilinear", fitTPU = FALSE, id = c("rep", "elevation"))
# plot vcmax vs jmax
with(coef(rmbl.enq.clean.2.pooled.species), plot(Vcmax, Jmax))
rmbl.enq.clean.2.pooled.species.parameters <- coef(rmbl.enq.clean.2.pooled.species)
rmbl.enq.clean.2.pooled.species.parameters$elevation <- as.numeric(rmbl.enq.clean.2.pooled.species.parameters$elevation)
# Add column with Jmax:Vcmax ratio
rmbl.enq.clean.2.pooled.species.parameters <- rmbl.enq.clean.2.pooled.species.parameters %>%
mutate(JVratio = Jmax/Vcmax)
rmbl.enq.clean <- rmbl.enq.clean.2.parameters %>%
mutate(JVratio = Jmax/Vcmax)
# Plot with species noted by colour
ggplot(rmbl.enq.clean, aes(elevation, Jmax, colour = species)) +
geom_point(position = position_jitter(width = 10), alpha = .5) +
stat_summary(fun = "mean", geom = "point",
size = 5, shape = "diamond",
position = position_dodge(width = 30)) +
stat_summary(fun = "mean", geom = "line",
position = position_dodge(width = 30)) +
labs(x = "Elevation (m)", y = "Jmax") +
theme_classic(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
# Plot with species pooled
ggplot(rmbl.enq.clean.2.pooled.species.parameters, aes(elevation, JVratio)) +
geom_point(position = position_jitter(width = 10), alpha = .3) +
stat_summary(fun = mean, na.rm = TRUE,
geom = "point", color = "firebrick1", size = 3) +
stat_summary(fun.data = mean_cl_normal, na.rm =TRUE,
geom = "errorbar", width = .2, color = "firebrick1") +
labs(x = "Elevation (m)", y = "Jmax:Vcmax") +
theme_classic(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
# Plot with species pooled
ggplot(rmbl.enq.clean.2.pooled.species.parameters, aes(elevation, Vcmax)) +
geom_point(position = position_jitter(width = 10), alpha = .3) +
stat_summary(fun = mean, na.rm = TRUE,
geom = "point", color = "firebrick1", size = 3) +
stat_summary(fun.data = mean_cl_normal, na.rm =TRUE,
geom = "errorbar", width = .2, color = "firebrick1") +
labs(x = "Elevation (m)", y = "Vcmax") +
theme_classic(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
border()
